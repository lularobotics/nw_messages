########################################
# Goal constants                       #
########################################

# Action name used to addess the server
string DEFAULT_ACTION_NAME=riemo_move_plan_action

########################################
# Goal definition                      #
########################################

# 3D target position
geometry_msgs/Point target

# Behavior type of "over" makes the robot go over the object; behavior type of
# "around" makes it go around the object.
string behavioral_type
string BEHAVIORAL_TYPE_DEFAULT=default
string BEHAVIORAL_TYPE_OVER=over
string BEHAVIORAL_TYPE_AROUND=around

# Specifies the orientation the end-effector should have to be considered
# "upright". Must be orthogonal to the approach_constraint_csv. Constrains the
# y-axis of the end-effector. Application of this constraint are governed by
# use_upright_orientation_constraint{_end_only}.
string upright_constraint_direction_csv

# Set to true to include an orientation constraint to keep the hand upright
# throughout the entire motion.
bool use_upright_orientation_constraint

# Set to true to include an orientation constraint to keep the hand upright
# only at the final configuration.
bool use_upright_orientation_constraint_end_only

# Note on format: in the following <v{x,y,z}> denotes a vector and <pt{x,y,z}>
# denotes a point.

# Specify an approach constraint. This constraint is a vector, specified as a comma
# separated string of three numbers, specifying the direction that the end-effector should
# approach the target from at the end of the motion.
string approach_constraint_csv # Format: <vx>,<vy>,<vz>

# When true, approaches the target *from* the approach direction and opens and
# closes the grippers to establish a grasp. This functionality specifies moving
# toward an object to establish a grasp. For that reason, it turns off the
# pickup and putdown functionality if either of those are set.
bool shape_approach

# When true (and shape_approach is not set) performs a "pickup" motion at the
# beginning of the trajectory.
bool pickup

# When true (and shape_approach is not set) performs a "putdown" motion at the
# beginning of the trajectory.
bool putdown

# This CSV gives a ray pointing from the the center of the sphere to the
# surface where a linearization constraint should be added. A linearization
# constraint is a linear function whose zero set is offset by .03 m radially
# from the tangent to the surface and increases away from the sphere. The
# constraint is applied t_fraction of the way through the trajectory and it
# enforces that the end-effector be on the position side of the plane at that
# point.
string obstacle_linearization_constraint_csv # Format: <vx>,<vy>,<vz>,<t_fraction>

# The passthrough constraint is a more restrictive variant of a constraint that
# constrains the behavior of the robot as it moves from point to point. It gives
# a full box at (<ptx>,<pty>,<ptz>) with 1/2 side length (radius) of <radius>. 
# It is again applied t_fraction of the way through the trajectory.
string passthrough_constraint_csv # Format: <ptx>,<pty>,<ptz>,<radius>,<t_fraction>

---

########################################
# Result definition                    #
########################################

#
# Planners result data
#

# currently not needed

---

########################################
# Feedback definition                  #
########################################

#
# Planning feedback data
#
#

# currently not needed
